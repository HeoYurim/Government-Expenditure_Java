-- 테이블을 생성할 때 NOT NULL 설정하기
CREATE TABLE TABLE_NOTNULL(
    LOGIN_ID  VARCHAR2(20) NOT NULL,
    LOGIN_PWD VARCHAR2(20) NOT NULL,
    TEL       VARCHAR2(20)
);
    
DESC TABLE_NOTNULL;

-- 제약 조건이 NOT NULL인 열에 NULL값 넣어보기 (삽입 불가능)
INSERT INTO TABLE_NOTNULL(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('TEST_ID_01' , NULL, '010-1234-5678');

-- 제약 조건이 없는 TEL 열에 NULL 값 입력하기
INSERT INTO TABLE_NOTNULL(LOGIN_ID, LOGIN_PWD)
VALUES ('TEST_ID_01', '1234');

SELECT * FROM TABLE_NOTNULL;

-- NOT NULL 제약 조건이 지정된 열 데이터를 NULL 값으로 업데이트하기 (NULL로 갱신 불가)
UPDATE TABLE_NOTNULL
SET LOGIN_PWD = NULL
WHERE LOGIN_ID = 'TEST_ID_01';

-- 제약 조건 살펴보기(SCOTT 계정)
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

-- 제약 조건 이름을 직접 지정
CREATE TABLE TABLE_NOTNULL2(
    LOGIN_ID  VARCHAR2(20) CONSTRAINT TBLNN2_LGNID_NN NOT NULL,
    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLNN2_LGNPW_NN NOT NULL,
    TEL       VARCHAR2(20)
);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS; 

-- TEL 열에 NOT NULL 제약 조건 추가하기 (사용 설정 불가 널 값 발견)
ALTER TABLE TABLE_NOTNULL
MODIFY(TEL NOT NULL);

-- TEL 열 데이터 수정하기
UPDATE TABLE_NOTNULL
SET TEL = '010-1234-5678'
WHERE LOGIN_ID = 'TEST_ID_01';

SELECT * FROM TABLE_NOTNULL;

-- NOT NULL 제약 조건 추가하기
ALTER TABLE TABLE_NOTNULL
MODIFY(TEL NOT NULL);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS; 

-- 제약 조건에 이름 지정해서 추가하기
ALTER TABLE TABLE_NOTNULL2
MODIFY(TEL CONSTRAINT TBLNN_TEL_NN NOT NULL);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS; 

-- 이미 생성된 제약 조건 이름 변경하기
ALTER TABLE TABLE_NOTNULL2
RENAME CONSTRAINT TBLNN_TEL_NN TO TBLNN2_TEL_NN;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS; 

-- 제약 조건 삭제
ALTER TABLE TABLE_NOTNULL2
DROP CONSTRAINT TBLNN2_TEL_NN;

DESC TABLE_NOTNULL2;

-- 제약 조건 지정하기(테이블을 생성할 때)
CREATE TABLE TABLE_UNIQUE(
LOGIN_ID  VARCHAR2(20) UNIQUE,
LOGIN_PWD VARCHAR2(20) NOT NULL,
TEL       VARCHAR2(22)
);

DESC TABLE_UNIQUE;

-- USER_CONSTRAINTS 데이터 사전 뷰로 제약 조건 확인하기
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TABLE_UNIQUE';

-- TABLE_UNIQUE 테이블에 데이터 입력하기
INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');

SELECT * FROM TABLE_UNIQUE;

-- LOGIN_ID 열에 중복되는 데이터 넣기 (무결겅 제약 조건에 위배)
INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD,TEL)
VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');

-- TABLE_UNIQUE 테이블에 데이터 입력하기
INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('TEST_ID_02', 'PWD01','010-1234-5678');

SELECT * FROM TABLE_UNIQUE;

-- UNIQUE 제약 조건이 지정된 열에 NULL 값 입력하기
INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)
VALUES(NULL, 'PWD01','010-1234-5678');

SELECT * FROM TABLE_UNIQUE;

-- TABLE_UNIQUE 테이블 데이터 수정하기 (무결성 제약 조건 위배 = 이미 있는 ID값 지정해서 그렇다)
UPDATE TABLE_UNIQUE
SET LOGIN_ID = 'TEST_ID_01'
WHERE LOGIN_ID IS NULL;

-- 테이블을 생성할 때 UNIQUE 제약 조건 설정하기
CREATE TABLE TABLE_UNIQUE2(
    LOGIN_ID  VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNID_UNQ UNIQUE,
    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNPW_NN NOT NULL,
    TEL       VARCHAR2(20)
);    

-- 생성한 UNIQUE 제약 조건 확인하기(USER_CONSTRANINTS)
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

-- 이미 생성한 테이블 열에 UNIQUE 제약 조건 추가하기 (중복 키가 있어서 안됨)
ALTER TABLE TABLE_UNIQUE
MODIFY(TEL UNIQUE);

-- TEL 열 값을 모두 NULL 값으로 변경하기
UPDATE TABLE_UNIQUE
SET TEL = NULL;

SELECT * FROM TABLE_UNIQUE;

-- TEL 값에 UNIQUE 제약 조건 설정하기
ALTER TABLE TABLE_UNIQUE
MODIFY(TEL UNIQUE);

-- UNIQUE 제약 조건 이름 직접 지정하기
ALTER TABLE TABLE_UNIQUE2
MODIFY(TEL CONSTRAINT TBLUNQ_TEL_UNQ UNIQUE);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

-- 이미 만들어져 있는 UNIQUE 제약 조건 이름 수정하기
ALTER TABLE TABLE_UNIQUE2
RENAME CONSTRAINT TBLUNQ_TEL_UNQ2 TO TBLUNQ2_TEL_UNQ;

-- 제약 조건 삭제
ALTER TABLE TABLE_UNIQUE2
DROP CONSTRAINT TBLUNQ2_TEL_UNQ;

-- 테이블을 생성하며 제약 조건 지정하기
CREATE TABLE TABLE_PK(
    LOGIN_ID  VARCHAR2(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) NOT NULL,
    TEL       VARCHAR2(20)
);   

DESC TABLE_PK; 

-- 생성한 PRIMARY KEY 확인하기
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TABLE_PK%';

-- 생성한 PRIMARY KEY를 통해 자동 생성된 INDEX 확인하기
SELECT INDEX_NAME, TABLE_OWNER, TABLE_NAME
FROM USER_INDEXES
WHERE TABLE_NAME LIKE 'TABLE_PK%';

-- 제약 조건의 이름을 직접 지정하여 테이블 생성하기
CREATE TABLE TABLE_PK2(
    LOGIN_ID  VARCHAR2(20) CONSTRAINT TBLPK2_LGNID_PK PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLPK2_LGNPW_NN NOT NULL,
    TEL       VARCHAR2(20)
);  

DESC TABLE_PK2;

-- PRIMARY KEY 제약 조건을 지정한 열 확인(중복 값을 입력했을 때)
INSERT INTO TABLE_PK(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');

-- TABLE_PK 테이블에 중복되는 데이터 입력하기 (중복 허용하지 않음)
INSERT INTO TABLE_PK(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('TEST_ID_01','PWD02', '010-2345-6789');

-- NULL 값을 명시적으로 입력하기
INSERT INTO TABLE_PK(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('NULL', 'PWD02', '010-2345-6789');

-- NULL 값을 암시적으로 입력하기 (NULL값을 허용하지 않음)
INSERT INTO TABLE_PK(LOGIN_PW, TEL)
VALUES('PWD02', '010-2345-6789');

-- EMP 테이블과 DEPT 테이블의 제약 조건 살펴보기
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME, R_OWNER, R_CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('EMP','DEPT');

-- FOREIGN KEY가 참조하는 열에 존재하지 않는 데이터 입력하기 (부모 키가 없다)
INSERT INTO EMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(9999,'홍길동','CLERK','7788',TO_DATE('2017/04/30','YYYY/MM/DD'), 1200, NULL, 50);

-- DEPT_FK 테이블 생성하기
CREATE TABLE DEPT_FK(
    DEPTNO NUMBER(2) CONSTRAINT DEPTFK_DEPTNO_PK PRIMARY KEY,
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13)
);

DESC DEPT_FK;    

-- EMP_FK 테이블 생성하기
CREATE TABLE EMP_FK(
    EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK REFERENCES DEPT_FK(DEPTNO)
);

DESC EMP_FK;

-- EMP_FK 테이블에 데이터 삽입하기(DEPTNO 데이터가 아직 DEPT_FK 테이블에 없을 때) -> 부모 키가 없다.
INSERT INTO EMP_FK
VALUES(9999,'TEST_NMAME','TEST_JOB',NULL,TO_DATE('2001/01/01','YYYY/MM/DD'), 3000, NULL, 10);

-- DEPT_FK에 데이터 삽입하기
INSERT INTO DEPT_FK
VALUES(10, 'TEST_DNAME', 'TEST_LOC');

SELECT * FROM DEPT_FK;

-- EMP_FK 테이블에 데이터 삽입하기
INSERT INTO EMP_FK
VALUES(9999,'TEST_NMAME','TEST_JOB',NULL,TO_DATE('2001/01/01','YYYY/MM/DD'), 3000, NULL, 10);

SELECT * FROM EMP_FK;

-- DEPT_FK 테이블의 10번 부서 데이터 삭제하기 (DEPTNO 값을 참조하는 데이터가 존재)
DELETE FROM DEPT_FK
WHERE DEPTNO = 10;

-- 테이블을 생성할 때 CHECK 제약 조건 설정하기
CREATE TABLE TABLE_CHECK(
    LOGIN_ID  VARCHAR2(20) CONSTRAINT TBLCK_LOGINID_PK PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLCK_LOGINPW_CK CHECK (LENGTH(LOGIN_PWD) > 3), --비밀번호 3글자 이상
    TEL       VARCHAR2(20)
); 

DESC TABLE_CHECK;

-- CHECK 제약 조건에 맞지 않는 예
INSERT INTO TABLE_CHECK
VALUES('TEST_ID' ,'123','010-1234-5678');

-- CHECK 제약 조건에 맞는 예
INSERT INTO TABLE_CHECK
VALUES('TEST_ID' ,'1234','010-1234-5678');

SELECT * FROM TABLE_CHECK;

-- CHECK 제약 조건 확인하기
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TABLE_CHECK';

-- 테이블을 생성할 때 DEFAULT 제약 조건 설정하기
CREATE TABLE TABLE_DEFAULT(
    LOGIN_ID  VARCHAR2(20) CONSTRAINT TBLCK2_LOGINID_PK PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) DEFAULT '1234',
    TEL       VARCHAR2(20)
); 

DESC TABLE_DEFAULT;

-- DEFAULT로 지정한 기본값이 입력되는 INSERT문 확인하기
INSERT INTO TABLE_DEFAULT VALUES ('TEST_ID', NULL, '010-1234-5678');

INSERT INTO TABLE_DEFAULT (LOGIN_ID, TEL) VALUES ('TEST_ID2', '010-1234-5678');

SELECT * FROM TABLE_DEFAULT;
